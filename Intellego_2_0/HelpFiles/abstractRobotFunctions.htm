<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body bgcolor="#333333" text="#FFFFFF" link="#FFCC00" vlink="#999966" alink="#FFFF00">
<blockquote> 
  <h1><font color="#FFFF00" size="7" face="Verdana, Arial, Helvetica, sans-serif">AbstractRobot 
    Functions </font></h1>
  <hr>
  <p><font color="#FFFF00" size="+2" face="Verdana, Arial, Helvetica, sans-serif">Introduction:</font></p>
  <blockquote> 
    <p><font face="Verdana, Arial, Helvetica, sans-serif">Since <font color="#FFFF00">every</font> 
      Controller File must have <font color="#FFFF00">dual functionality</font>, 
      since it must run on both, the simulator and the Real Robot, therefore there 
      must be a specific list of functions for the robot which are provide the 
      same output but are implemented differently. The <font color="#FFFF00">specific 
      list of functions is denoted by the methods in the AbstractRobot class</font> 
      which is infact an interface. The process for using these methods in the 
      Controller File is as follows:</font></p>
    <blockquote> 
      <p><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">1.) 
        <font color="#FFFFFF">save the AbstractRobot parameter, which is passed 
        through the:</font></font> ' <code><font color="#00FF00">public abstract 
        void initController(AbstractRobot r);</font></code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif"><font color="#FFFFFF">' 
        method in the Controller File as an instance variable in the Controller 
        File.</font></font></p>
      <blockquote> 
        <p><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif"><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif"><strong><font color="#FF0000">NOTE:</font> 
          <font color="#C0C0C0">' <code><font color="#00FF00">public abstract 
          void initController(AbstractRobot r);</font></code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif"><font color="#FFFFFF">'</font></font> 
          is<font color="#FFFFFF"> required by the <a href="controllerInterface.htm"><font color="#00FF00">Controller 
          Interface</font></a></font></font></strong></font></font></p>
      </blockquote>
      <p><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">2.) 
        <font color="#FFFFFF">implement <font color="#FFFF00">ALL</font> of the 
        functions in the by <font color="#00FF00">AbstractRobotVariable</font><font color="#FF0080">.FUNCTION 
        <font color="#FFFF00">(exactly like in the <a href="zincRocker.htm">Sample 
        Controller File</a>)</font></font></font></font></p>
    </blockquote>
  </blockquote>
  <p><font color="#FFFF00" size="+2" face="Verdana, Arial, Helvetica, sans-serif">The 
    List of Constants:</font></p>
  <p>&nbsp;</p>
  <blockquote> 
    <table width="743" border="1" cellspacing="0" cellpadding="0">
      <tr align="center" valign="middle"> 
        <td height="32" colspan="2"><strong><font color="#FFFF00" size="+1" face="Verdana, Arial, Helvetica, sans-serif">CONSTANTS:</font></strong></td>
        <td width="519"><strong><font color="#FFFF00" size="+1" face="Verdana, Arial, Helvetica, sans-serif">DESCRIPTION:</font></strong></td>
      </tr>
      <tr> 
        <td height="21" colspan="3" align="center" valign="middle">&nbsp;</td>
      </tr>
      <tr> 
        <td width="66" align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">1.)</font></code></td>
        <td width="150" height="39" align="center" valign="middle"><code><font color="#FF0080" face="Verdana, Arial, Helvetica, sans-serif"> 
          BACKWARD</font></code></td>
        <td align="left" valign="middle"><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">.../** 
          constant for single motor to move backwards */ </font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">2.)</font></code></td>
        <td height="41" align="center" valign="middle"><code><font color="#FF0080" face="Verdana, Arial, Helvetica, sans-serif">FORWARD</font></code></td>
        <td align="left" valign="middle"><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">.../** 
          constant for single motor to move forwards */ </font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">3.)</font></code></td>
        <td height="40" align="center" valign="middle"><code><font color="#FF0080" face="Verdana, Arial, Helvetica, sans-serif">MOTOR_A</font></code></td>
        <td align="left" valign="middle"><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">.../** 
          constant for MOTOR A */ </font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">4.)</font></code></td>
        <td height="38" align="center" valign="middle"><code><font color="#FF0080" face="Verdana, Arial, Helvetica, sans-serif">MOTOR_C</font></code></td>
        <td align="left" valign="middle"><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">.../** 
          constant for MOTOR C */ </font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">5.)</font></code></td>
        <td height="42" align="center" valign="middle"><code><font color="#FF0080" face="Verdana, Arial, Helvetica, sans-serif">S1</font></code></td>
        <td align="left" valign="middle"><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">.../** 
          constant for sensor 1 */ </font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">6.)</font></code></td>
        <td height="38" align="center" valign="middle"><code><font color="#FF0080" face="Verdana, Arial, Helvetica, sans-serif">S2</font></code></td>
        <td align="left" valign="middle"><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">.../** 
          constant for sensor 2 */ </font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">7.)</font></code></td>
        <td height="41" align="center" valign="middle"><code><font color="#FF0080" face="Verdana, Arial, Helvetica, sans-serif">S3</font></code></td>
        <td align="left" valign="middle"><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">.../** 
          constant for sensor 3*/ </font></code></td>
      </tr>
    </table>
    <p>&nbsp;</p>
  </blockquote>
  <p><font color="#FFFF00" size="+2" face="Verdana, Arial, Helvetica, sans-serif">The 
    List of Functions:</font></p>
  <p>&nbsp;</p>
  <blockquote> 
    <table width="913" border="1" cellspacing="0" cellpadding="0">
      <tr valign="middle"> 
        <td height="31" colspan="2" align="center"><strong><font color="#FFFF00" size="+1" face="Verdana, Arial, Helvetica, sans-serif">FUNCTION 
          SIGNATURE:</font></strong></td>
        <td width="54%" align="center"><strong><font color="#FFFF00" size="+1" face="Verdana, Arial, Helvetica, sans-serif">DESCRIPTION:</font></strong></td>
      </tr>
      <tr> 
        <td height="42" colspan="3" align="center"><strong><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">- 
          - - - MOVING THE ROBOT - - - -</font></strong></td>
      </tr>
      <tr> 
        <td width="8%" align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif"> 
          1.)</font></code></td>
        <td width="38%" height="50"><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract void <font color="#FF0080">forward()</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Sets the robot moving forwards, this will continue until some other 
          <br>
          * method is called to stop it<br>
          */<br>
          </font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">2.)</font></code></td>
        <td height="39"><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif"> 
          public abstract void <font color="#FF0080">forward(int time)</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif"> 
          /**<br>
          * Makes the robot move forwards for the given amount of time <br>
          * @param time the time in milliseconds<br>
          */ </font></code></td>
      </tr>
      <tr> 
        <td height="70" align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">3.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract void <font color="#FF0080">backward()</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Sets the robot moving backwards, this will continue until some other 
          <br>
          * method is called to stop it <br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">4.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract void <font color="#FF0080">backward(int time)</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Makes the robot move backwards for the given amount of time<br>
          *<br>
          * @param time the time in milliseconds<br>
          */ </font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">5.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract void <font color="#FF0080">right()</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Sets the robot spinning right on a dime, this will continue until 
          some other <br>
          * method is called to stop it.<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">6.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract void <font color="#FF0080">right(int time)</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Spins the robot right on a dime for the given amount of time<br>
          *<br>
          * @param time the time in milliseconds<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">7.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract void <font color="#FF0080">left()</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Sets the robot spinning left on a dime, this will continue until some 
          other <br>
          * method is called to stop it.<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">8.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract void <font color="#FF0080">left(int time)</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Spins the robot left on a dime for the given amount of time<br>
          *<br>
          * @param time the time in milliseconds<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">9.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract void <font color="#FF0080">singleMotor(int motor, int direction)<font color="#00FF00">;</font></font></font></code></td>
        <td><p><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
            * Sets a single Motor moving, this will continue until some other 
            <br>
            * method is called to stop it<br>
            * Created by: Simon Zienkiewicz<br>
            *<br>
            * @param motor the motor number (AbstractRobot.MOTOR_A or AbstractRobot.MOTOR_C);<br>
            * @param direction, the direction number (AbstractRobot.BACKWARD or 
            AbstractRobot.FORWARD<br>
            */</font></code></p></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">10.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract void <font color="#FF0080">singleMotor(int motor, int direction, 
          int time)</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/ 
          /**<br>
          * Sets a single Motor moving for the given amount of time<br>
          * Created by: Simon Zienkiewicz<br>
          *<br>
          * @param motor the motor number (AbstractRobot.MOTOR_A or AbstractRobot.MOTOR_C);<br>
          * @param direction, the direction number (AbstractRobot.BACKWARDS or 
          AbstractRobot.FORWARDS<br>
          * @param time the time in milliseconds <br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">11.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract void <font color="#FF0080">stopMoving()<font color="#00FF00">;</font></font></font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Stops all motors immediately<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td height="40" colspan="3" align="center" valign="middle"><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif"><strong><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">- 
          - - - READING THE ROBOTS SENSORS - - - -</font></strong></font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">11.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract int <font color="#FF0080">getSensor1()</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Get the current reading of this sensor<br>
          *<br>
          * @return the current value<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">12.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract int <font color="#FF0080">getSensor2()</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Get the current reading of this sensor<br>
          *<br>
          * @return the current value<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">13.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract int <font color="#FF0080">getSensor3()</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Get the current reading of this sensor<br>
          *<br>
          * @return the current value<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">14.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract boolean[] <font color="#FF0080">getTouchSensorStatus()</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Gets an array of boolean values for the touch sensors<br>
          * Created by: Simon Zienkiewicz<br>
          *<br>
          * @return boolean values of the status of the sensors<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td height="47" colspan="3" align="center" valign="middle"><font color="#0080FF"><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif"><strong><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">- 
          - - - HANDLING THE ROBOT'S LCD - - - -</font></strong></font></code></font></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">15.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract void <font color="#FF0080">displayNumberLCD(int num)</font>;</font></code></td>
        <td><p><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
            * Display numbers on the LCD<br>
            * Created by: Simon Zienkiewicz</font></code><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif"><br>
            * @param num the number to display<br>
            */</font></code></p></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">16.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif"> 
          public abstract void <font color="#FF0080">clearLCD()</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Clears the display on the LCD<br>
          * Created by: Simon Zienkiewicz<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">17.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif"> 
          public abstract void <font color="#FF0080">displayTextLCD(String word)</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Display text on the LCD<br>
          * Created by: Simon Zienkiewicz<br>
          * <br>
          * @param word, string to display<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td height="43" colspan="3" align="center" valign="middle"><font color="#0080FF"><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif"><strong><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">- 
          - - - HANDLING THE ROBOT'S PROPERTIES - - - -</font></strong></font></code></font></td>
      </tr>
      <tr> 
        <td height="22" align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">18.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract void <font color="#FF0080">setMotorPower(int power)</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Sets the power of the motors for the robot<br>
          * Created by: Simon Zienkiewicz<br>
          *<br>
          * @param power, the desired power<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">19.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract int <font color="#FF0080">getMotorPower()</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Gets the power of the motors for the robot<br>
          * Created by: Simon Zienkiewicz<br>
          *<br>
          * @return the power of the motor 0-7<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">20.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract int <font color="#FF0080">getVoltage()</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Gets the voltage of the RCX battery in MilliVolts<br>
          * Created by: Simon Zienkiewicz<br>
          *<br>
          * @return int voltage in the battery of the RCX<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">21.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract void <font color="#FF0080">activate()</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif"> 
          /**<br>
          * Activates the light and touch sensors<br>
          * Created by: Simon Zienkiewicz<br>
          *<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">22.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif"> 
          public abstract void <font color="#FF0080">playTune(int frequency, int 
          duration)</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Plays a sound<br>
          * Created by: Simon Zienkiewicz<br>
          *<br>
          * @param frequency, the sound frequency<br>
          * @param duration, the duration of the sound in milliseconds<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">23.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract void <font color="#FF0080">beep()</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Makes the robot beep<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td height="37" colspan="3" align="center" valign="middle"><font color="#0080FF"><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif"><strong><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">- 
          - - - HANDLING TIMER/TIMING EVENTS- - - -</font></strong></font></code></font></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">24.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          abstract int <font color="#FF0080">createTimer(int time)</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif"> 
          /**<br>
          * Creates a timer <br>
          * Created by: Simon Zienkiewicz<br>
          *<br>
          * @param time, the delay for the timer<br>
          * @return int, the timer number<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">25.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif"> 
          public abstract void <font color="#FF0080">startTimer(int num)</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Starts the requested timer<br>
          * Created by: Simon Zienkiewicz<br>
          *<br>
          * @param num, the timer number<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">26.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif"> 
          public void <font color="#FF0080">stopTimer(int num)</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Stops the requested timer<br>
          * Created by: Simon Zienkiewicz<br>
          *<br>
          * @param num, the timer number<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">27.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          void <font color="#FF0080">stopAllTimers()</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Stops all timers<br>
          * Created by: Simon Zienkiewicz<br>
          *<br>
          */</font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">28.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          int <font color="#FF0080">getDelay(int num)</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Gets the delay from the requested timer <br>
          * Created by: Simon Zienkiewicz<br>
          *<br>
          * @param num, the timer number<br>
          * @return int, the timer delay<br>
          */ </font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">29.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif">public 
          void <font color="#FF0080">setDelay(int num, int time)</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif"> 
          /**<br>
          * Sets the delay for the requested timer<br>
          * Created by: Simon Zienkiewicz<br>
          *<br>
          * @param num, the timer number<br>
          * @param time, the new delay time<br>
          */ </font></code></td>
      </tr>
      <tr> 
        <td align="center" valign="middle"><code><font color="#FF0000" size="+1" face="Verdana, Arial, Helvetica, sans-serif">30.)</font></code></td>
        <td><code><font color="#00FF00" face="Verdana, Arial, Helvetica, sans-serif"> 
          public abstract void <font color="#FF0080">pause(int num)</font>;</font></code></td>
        <td><code><font color="#0080FF" face="Verdana, Arial, Helvetica, sans-serif">/**<br>
          * Pauses the simulation <br>
          * Modified by: Simon Zienkiewicz<br>
          *<br>
          * @param num, the number of milliseconds<br>
          */</font></code></td>
      </tr>
    </table>
    <p>&nbsp;</p>
  </blockquote>
</blockquote>
</body>
</html>
